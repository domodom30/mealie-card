name: Main
on:
  push:
  pull_request:
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
    - name: ⬇️ Checkout Repo
      uses: actions/checkout@v4
    - name: ⬢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '*'
        cache: npm
    - name: 📦 Install Packages
      run: npm ci
      
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ validate ]
    if: github.ref_name == 'main' && github.event_name == 'push'
    steps:
    - name: ⬇️ Checkout Repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: ⬢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '*'
        cache: npm
        
    - name: 📦 Install Packages
      run: npm ci
      
    - name: 🏗 Build
      run: npm run build
      
    - name: 📝 Extract version
      id: version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: 🗑️ Delete existing release and tag
      run: |
        TAG_NAME="v${{ steps.version.outputs.version }}"
        
        # Supprimer la release existante sur GitHub
        gh release delete "$TAG_NAME" -y 2>/dev/null || echo "No existing release to delete"
        
        # Supprimer le tag distant
        git push --delete origin "$TAG_NAME" 2>/dev/null || echo "No remote tag to delete"
        
        # Supprimer le tag local
        git tag -d "$TAG_NAME" 2>/dev/null || echo "No local tag to delete"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: 🏷️ Create new tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
        git push origin "v${{ steps.version.outputs.version }}"
        
    - name: 🚀 Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        files: dist/mealie-card.js
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
